INSTALL
=======

[Adapted for sourcedeps]

This should give you an idea about the basic steps. It is probably very rough
around the edges, feel free to ask for clarifications so we can improve it.

This guide assumes you are working on a Debian etch system. If that is not the
case, you might have to adjust some of the steps.

1) Install git (package git-core). You will get a much more pleasant user
   experience if you use a version from backports.org or a self-compiled one
   instead of etch's version.
2) Download the code from git://source.djpig.de/git/packages.git
   (Something like `git clone git://source.djpig.de/git/packages.git')
   [ Create a new branch from origin/sourcedeps
   (Something like `git checkout --track -b sourcdeps origin/sourcedeps) ]
3) Install the needed dependencies. A list can be found in debian/control.
   [...] [ For sourcedeps you basically only need libtemplate-perl ]
4) Install apache2 (apache2-mpm-worker) [...]
5) Adjust the configuration to your needs. You should at least edit the following
   files before starting to test (don't touch %TOPDIR% and %SITE%, as you will 
   specify it later):
   - ./config.sh.sed.in
   - ./conf/apache.conf.sed.in
  [- ./templates/sourcedeps/* ]
[5a) Trim down ./cron.d/* to what you actually need, most probably only the
  *syncarchive* stuff
5b) Create a gpg key for your archive and save it to conf/keyring.gpg and
   conf/secring.gpg and note the key id in config.sh.sed.in]
6) run `./bin/setup-site <topdir> <site>'
   (e.g. `./bin/setup-site /org/packages.debian.org packages.debian.org')
[...]
7) Include ./conf/apache.conf in apache's configuration, e.g. by symlinking it from
   /etc/apache2/sites-available/ and then using a2ensite
8) Run ./bin/daily [ and ./bin/cron_sourcedeps ]
   (this takes a while, especially the first time, as it downloads a lot of data,
   [at the time of this writing approx. 900 MB], creates databases, pre-builds heavy
   pages, etc.)
9) Setup ./bin/daily [ and ./bin/cron_sourcedeps ] to be run regulary. In ./conf/crontab you can find an example crontab
   to do this. Actually preferable is to trigger the script by archive updates, but you
   will know best if and how to implement that in your setup.
